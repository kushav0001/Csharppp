# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  displayName: Download Shift Left cli
  inputs:
   targetType: 'inline'
   script: |
    Invoke-WebRequest -Uri 'https://cdn.shift left.io/download/s1-latest-windows-x64.zip -OutFile $(Agent. HomeDirectory)\sl.zip.
    Expand-Archive Path $(Agent.HomeDirectory)\sl.zip -DestinationPath $(Agent.HomeDirectory)\

 
- task: CmdLine@2
  displayName: Analyze with Shiftleft
  inputs:
   script: |
    $(Agent.HomeDirectory)\sl.exe analyze --wait --app ShiftLeftDotnetCoreDemo -tag branch-$(Build. SourceBranchName) --tag app.group="AppSecTestApps" --csharp "netcoreWebapi/netcoreWebapi.sln"
    workingDirectory:'$(Build.SourcesDirectory)'
  env:
    SHIFTLEFT_ACCESS_TOKEN: $(SHIFTLEFT_ACCESS_TOKEN)

- task: CmdLine@2
  displayName: Shiftleft Check-Analysis
  inputs:
   script: |
    $(Agent.HomeDirectory)\sl.exe check-analysis--app ShiftLeftDotnetCoreDemo --v2--config shiftleft.yml
    workingDirectory: '$(Build.SourcesDirectory)'
  env:
    SHIFTLEFT_ACCESS_TOKEN: $(SHIFTLEFT_ACCESS_TOKEN)